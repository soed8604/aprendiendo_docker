apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app-deployment
  labels:
    app: backend-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
      - name: backend-app
        image: klerith/k8s-teslo-backend:1.1.0
        ports:
        - containerPort: 3000
        env:
        - name: APP_VERSION
          value: "1.1.0"
        - name: PORT
          value: "3000"
        - name: STAGE
          value: "prod"
        - name: DB_NAME
          valueFrom:
            configMapKeyRef: 
              name: postgres-config
              key: DB_NAME
        - name: DB_HOST
          valueFrom:
            configMapKeyRef: 
              name: postgres-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef: 
              name: postgres-config
              key: DB_PORT      
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef: 
              name: postgres-secrets
              key: DB_USER    
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef: 
              name: postgres-secrets
              key: DB_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef: 
              name: backend-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-app-service
spec:
  type: NodePort
  selector:
    app: backend-app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30300